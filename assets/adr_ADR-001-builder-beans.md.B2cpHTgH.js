import{_ as a,c as t,a2 as s,o}from"./chunks/framework.DYGJpL-T.js";const b=JSON.parse('{"title":"Builder Beans","description":"","frontmatter":{},"headers":[],"relativePath":"adr/ADR-001-builder-beans.md","filePath":"adr/ADR-001-builder-beans.md","lastUpdated":1748505150000}'),r={name:"adr/ADR-001-builder-beans.md"};function n(i,e,c,d,l,h){return o(),t("div",null,e[0]||(e[0]=[s('<h1 id="builder-beans" tabindex="-1">Builder Beans <a class="header-anchor" href="#builder-beans" aria-label="Permalink to &quot;Builder Beans&quot;">​</a></h1><h2 id="status" tabindex="-1">Status <a class="header-anchor" href="#status" aria-label="Permalink to &quot;Status&quot;">​</a></h2><p>Accepted.</p><h2 id="context" tabindex="-1">Context <a class="header-anchor" href="#context" aria-label="Permalink to &quot;Context&quot;">​</a></h2><p>There&#39;s an idiomatic way of providing library functionality throughout Spring.<br> Modules such as Spring JDBC, AMQP or Web provide <em>templates</em> as beans. Users<br> can have these templates injected into their components, and access the<br> functionality.</p><p>Publishing the Query/Response API through static factory methods may be<br> convenient but <strong>it is not the common way.</strong> It also hides the capabilities<br> of <em>mock</em> or <em>test dummy</em> setup in the user code, which makes testing harder.</p><h2 id="decision" tabindex="-1">Decision <a class="header-anchor" href="#decision" aria-label="Permalink to &quot;Decision&quot;">​</a></h2><p>The <code>QueryBuilder</code> and <code>ResponseBuilder</code> should both be made available through<br> the means of bean injection. The static factory methods are removed.</p><p>The beans shall be available as mockable types, to better support testing.</p><h2 id="consequences" tabindex="-1">Consequences <a class="header-anchor" href="#consequences" aria-label="Permalink to &quot;Consequences&quot;">​</a></h2><p>A lot of complexity caused by static access to the registry beans will<br> disappear.</p><p>The convenient and very terse static API is no longer available.</p><p>Testing is much easier for users.</p>',13)]))}const p=a(r,[["render",n]]);export{b as __pageData,p as default};
